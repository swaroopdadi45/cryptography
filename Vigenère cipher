#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// Function to perform one-time pad version of Vigenère cipher
void vigenereOneTimePad(char *plaintext, int *key, int keyLength) {
    int i;
    int textLength = strlen(plaintext);

    for (i = 0; i < textLength; i++) {
        if (isalpha(plaintext[i])) {
            char baseChar = isupper(plaintext[i]) ? 'A' : 'a';
            int offset = key[i % keyLength];

            // Apply Vigenère cipher with one-time pad
            plaintext[i] = ((plaintext[i] - baseChar + offset) % 26) + baseChar;
        }
    }
}

int main() {
    char plaintext[1000];
    int key[100];
    int keyLength, i;

    // Input plaintext
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    // Remove newline character from input
    strtok(plaintext, "\n");

    // Input key
    printf("Enter the key length: ");
    scanf("%d", &keyLength);

    printf("Enter the key (stream of random numbers between 0 and 26): ");
    for (i = 0; i < keyLength; i++) {
        scanf("%d", &key[i]);
    }

    // Perform one-time pad version of Vigenère cipher
    vigenereOneTimePad(plaintext, key, keyLength);

    // Display the encrypted text
    printf("Encrypted Text: %s\n", plaintext);

    return 0;
}
